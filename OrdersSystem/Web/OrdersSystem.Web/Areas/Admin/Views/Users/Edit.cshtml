@model OrdersSystem.Web.Areas.Admin.ViewModels.Users.UserEditModel
@{
    ViewBag.Title = "Edit";
}

<h2>Edit User Email</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.EditorFor(m => m.Email)
        @Html.ValidationMessageFor(m => m.Email, "",  new { @class = "text-danger" })
    </div>
    <div class="form-group">
        <input type="submit" value="Update" class="btn btn-success" />
        @Html.ActionLink("Cancel", "Index", null, new { @class = "btn btn-default" })
    </div>
}

<h2>Add Role</h2>

@using (Html.BeginForm("AddRoleToUser", "Users", "POST", FormMethod.Post))
{
    <div class="form-group">
        @Html.AntiForgeryToken()
        @Html.Hidden("userId", Model.Id)
        @Html.DropDownList(
               "roleId",
               ViewBag.RolesMissing as IEnumerable<SelectListItem>,
               new { @class = "form-control" })
    </div>
    <div class="form-group">
        <input type="submit" value="Add role" class="btn btn-default" />
    </div>
}

<h2>Remove Role</h2>

@using (Html.BeginForm("RemoveUserRole", "Users", "POST", FormMethod.Post))
{
    <div class="form-group">
        @Html.AntiForgeryToken()
        @Html.Hidden("userId", Model.Id)
        @Html.DropDownList(
               "roleId",
               ViewBag.RolesAvailable as IEnumerable<SelectListItem>,
               new { @class = "form-control" })
    </div>
    <div class="form-group">
        <input type="submit" value="Remove role" class="btn btn-default" />
    </div>
}

